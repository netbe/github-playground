# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-14  
    outputs:
      out: '${{ steps.test.outputs.out }}'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Add Mask
        run: echo "::add-mask::${{ secrets.HIDE_INFO_1 }}"
      - name: Retrieve Xcode version
        run: |
          echo "XCODE_VERSION=$(cat .xcode-version)" >> $GITHUB_OUTPUT
        id: xcode-version
      - name: test
        id: plan
        shell: bash
        run: |
          out="hello \n world"
          echo "out=$out" >> $GITHUB_OUTPUT
      - name: Use multiline string variable
        run: echo "${{ env.MULTILINE_STRING }}"
      - uses: maxim-lobanov/setup-xcode@v1.5.1
        with:
          xcode-version: ${{ steps.xcode-version.outputs.XCODE_VERSION }}
      - name: bundler install
        run: bundle install
      - id: build
        run: bundle exec fastlane build
  log:
    runs-on: macos-14
    outputs:
      changelog-url: ${{ steps.expose-url.outputs.changelog }}
      sha256: ${{ steps.genfile.outputs.sha256 }}
      
    steps:
      - name: build number
        id: build-number
        run: |
          build_number=`curl -H "Accept: text/plain" -X POST -d '' "https://incrementator.appspot.com/api/v1/code/iqZCQLhyVYKxWVzecuQHXBbhfJJJdtoxUXvtMzn99MoFlJIW/increment"`
          echo file_path=changelog-${build_number}.md >> $GITHUB_OUTPUT

      # Runs a set of commands using the runners shell
      - name: Generate file
        id: genfile
        run: |
          date > ${{ steps.build-number.outputs.file_path }}
          echo "hello" >> ${{ steps.build-number.outputs.file_path }}
          sha256=`shasum -a 256 ${{ steps.build-number.outputs.file_path }} | awk '{ print $1 }'`
          echo sha256=${sha256} >> $GITHUB_OUTPUT
      - name: Upload file
        id: upload-file
        uses: actions/upload-artifact@v4
        with:
          name: changelog
          path: ${{ steps.build-number.outputs.file_path }}
          if-no-files-found: error
      - name: Expose url of file
        id: expose-url
        run: echo "changelog=${{ steps.upload-file.outputs.artifact-url }}" >> $GITHUB_OUTPUT
  result:
    runs-on: macos-14
    needs: log
    steps:
    - name: Output artifact url
      run:  echo 'Artifact URL is ${{ needs.log.outputs.changelog-url }}'
    - name: Output sha256
      run:  echo "sha256 ${{ needs.log.outputs.sha256 }}"
  job1:
    runs-on: macos-14
    outputs:
      myoutput: ${{ steps.step1.outputs.myoutput }}
    
    steps:
    - name: set output
      id: step1
      run: |
        echo "myoutput='hello world'" >> $GITHUB_OUTPUT

  job2:
    runs-on: macos-14
    needs: job1

    steps:
    - name: retrieve output
      run: |
        echo ${{ needs.job1.outputs.myoutput }}
